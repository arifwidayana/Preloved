name: build

on:
  push:
    branches: ["master"]
  pull_request:
    branches: ["master"]
concurrency:
  group: build-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 60

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Project
        uses: ./github/actions/setup

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Decode Core Properties
        env:
          ENCODED_STRING_CORE: ${{ secrets.CORE_PROPERTIES_B64 }}
          CORE_PROPERTIES_PATH: ${{ secrets.CORE_PROPERTIES_PATH }}

        run: |
          echo $ENCODED_STRING_CORE > core-properties-b64.txt
          base64 -d core-properties-b64.txt > $CORE_PROPERTIES_PATH

      - name: Build with Gradle
        run: ./gradlew build

      - name: Setup Gradle
        uses: gradle/gradle-build-action@v2

#      - name: Upload build outputs (APKs)
#        uses: actions/upload-artifact@v3
#        with:
#          name: build-outputs
#          path: app/build/outputs
#
#      - name: Upload build reports
#        if: always()
#        uses: actions/upload-artifact@v3
#        with:
#          name: build-reports
#          path: app/build/reports

  androidTest:
    needs: build
    runs-on: macOS-latest # enables hardware acceleration in the virtual machine
    timeout-minutes: 55
    strategy:
      matrix:
        api-level: [26, 30]

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Project
        uses: ./github/actions/setup

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Build with Gradle
        run: ./gradlew build

      - name: Setup Gradle
        uses: gradle/gradle-build-action@v2

      - name: Decode Core Properties
        env:
          ENCODED_STRING_CORE: ${{ secrets.CORE_PROPERTIES_B64 }}
          CORE_PROPERTIES_PATH: ${{ secrets.CORE_PROPERTIES_PATH }}

        run: |
          echo $ENCODED_STRING_CORE > core-properties-b64.txt
          base64 -d core-properties-b64.txt > $CORE_PROPERTIES_PATH

#      - name: Run instrumentation tests
#        uses: reactivecircus/android-emulator-runner@v2
#        with:
#          api-level: ${{ matrix.api-level }}
#          arch: x86_64
#          disable-animations: true
#          disk-size: 6000M
#          heap-size: 600M
#          script: ./gradlew connectedProdDebugAndroidTest -x :benchmark:connectedProdBenchmarkAndroidTest

      - name: Upload test reports
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: test-reports-${{ matrix.api-level }}
          path: '*/build/reports/androidTests'

  release_build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Project
        uses: ./github/actions/setup

      - name: Decode Core Properties
        env:
          ENCODED_STRING_CORE: ${{ secrets.CORE_PROPERTIES_B64 }}
          CORE_PROPERTIES_PATH: ${{ secrets.CORE_PROPERTIES_PATH }}

        run: |
          echo $ENCODED_STRING_CORE > core-properties-b64.txt
          base64 -d core-properties-b64.txt > $CORE_PROPERTIES_PATH

      - name: Decode Keystore
        env:
          ENCODED_STRING_KEYSTORE: ${{ secrets.RELEASE_STORE_FILE_B64 }}
          RELEASE_KEY_FILE_PATH: ${{ secrets.RELEASE_KEY_FILE_PATH }}

        run: |
          echo $ENCODED_STRING_KEYSTORE > keystore-b64.txt
          base64 -d keystore-b64.txt > $RELEASE_KEY_FILE_PATH

      - name: Build Release apk
        env:
          SIGNING_KEY_STORE_PATH: ${{ secrets.RELEASE_KEY_FILE_PATH }}
          SIGNING_KEY_ALIAS: ${{ secrets.RELEASE_KEY_ALIAS }}
          SIGNING_KEY_PASSWORD: ${{ secrets.RELEASE_KEY_PASSWORD }}
          SIGNING_STORE_PASSWORD: ${{ secrets.RELEASE_STORE_PASSWORD }}
        run: ./gradlew assembleRelease

      - name: Build Release bundle
        env:
          SIGNING_KEY_STORE_PATH: ${{ secrets.RELEASE_KEY_FILE_PATH }}
          SIGNING_KEY_ALIAS: ${{ secrets.RELEASE_KEY_ALIAS }}
          SIGNING_KEY_PASSWORD: ${{ secrets.RELEASE_KEY_PASSWORD }}
          SIGNING_STORE_PASSWORD: ${{ secrets.RELEASE_STORE_PASSWORD }}
        run: ./gradlew bundleRelease

      - name: Upload Release Build to Artifacts
        uses: actions/upload-artifact@v3
        with:
          name: release-artifacts
          paths: |
            app/build/outputs/apk/release/ 
            app/build/outputs/bundle/release/

      - name: Create Github Release
        uses: softprops/action-gh-release@v1
        with:
          generate_release_notes: true
          pre-release: true
          files: |
            app/build/outputs/apk/release/app-release.apk
            app/build/outputs/apk/release/output-release.apk